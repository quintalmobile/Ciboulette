#!/bin/bash

NOMBRE=`basename $0`

# dependencias
TMP=$(mktemp)

# - instala dependencias
# - crea servicio oculto
# - genera las carpetas
# - copia las configuraciones de nanoblogger, rawdog
# - copia ciboulette
# - actualizar ciboulette

# ---------------------  DEPENDENCIAS -----------------------------


echo
echo "Instalando dependencias"
echo "-----------------------"
echo

# verifica el sistema operativo
if [ "$(which yum)" ]; then
	aptitude="yum -y install"
elif [ "$(which pacman)" ]; then
	aptitude="yaourt -S"
else
	aptitude="apt-get -y install"
fi

[ "$(which gksu)" ] && gksu="gksu" || gksu="su -c"

echo "" > $TMP
	        if [ "$(uname -r | grep ARCH)" ]; then
	# en Arch
	echo "darkhttpd tor torsocks zenity nanoblogger rawdog python2-feedparser" | \
	sed 's/\ /\n/g' | while read i; do
[ ! "$(which $i)" ] && echo "Instalar los programas $i"
	done
else
sudo aptitude install prosody

HOST=$(cat ~/.ciboulette/hostname | sed 's/^.*\/\///g')

# esto va como sudo
cd /etc/prosody/conf.avail

# Todavia no se como hacer para separar las versiones
echo "Host "$HOST"" > "$HOST.cfg.lua"
echo "VirtualHost "$HOST"" >> "$HOST.cfg.lua"

cd ../conf.d
ln -s ../conf.avail/$HOST.cfg.lua .

# reiniciar prosody

sudo /etc/init.d/prosody restart
sudo aptitude install prosody

HOST=$(cat ~/.ciboulette/hostname | sed 's/^.*\/\///g')

# esto va como sudo
cd /etc/prosody/conf.avail

# Todavia no se como hacer para separar las versiones
echo "Host "$HOST"" > "$HOST.cfg.lua"
echo "VirtualHost "$HOST"" >> "$HOST.cfg.lua"

cd ../conf.d
ln -s ../conf.avail/$HOST.cfg.lua .

# reiniciar prosody

sudo /etc/init.d/prosody restart

	# en Mint, Debian, Fedora (?)
	echo "mini-httpd tor torsocks zenity nanoblogger rawdog libnotify-bin" | \
	sed 's/\ /\n/g' | while read i; do
[ ! "$(which $i)" ] && echo "$aptitude $i"
	done > $TMP
	        fi

# ----------------------------- TOR ----------------------------------

echo
echo "Configuración de TOR y lanzadores"
echo "---------------------------------"
echo

# Configuración en tor y reinicio del demonio

echo "echo 'HiddenServiceDir /var/lib/tor/${NOMBRE}/' >> /etc/tor/torrc
echo 'HiddenServicePort 80 127.0.0.1:4232' >> /etc/tor/torrc
echo 'HiddenServicePort 5222 127.0.0.1:5222' >> /etc/tor/torrc
echo 'HiddenServicePort 5269 127.0.0.1:5269' >> /etc/tor/torrc
cp $NOMBRE /usr/local/bin/
systemctl restart tor 2> /dev/null
/etc/init.d/tor restart 2> /dev/null
cp $NOMBRE.png /usr/share/pixmaps/
cp -r lang /usr/share/nanoblogger/
cp $NOMBRE.desktop /usr/share/applications/
sleep 10
cat "/var/lib/tor/${NOMBRE}/hostname" > /tmp/hostname" >> $TMP

	        echo "Se necesita autenticación como superusuario para instalar los paquetes. Debe proporcionar la contraseña de root"
$gksu "bash $TMP"
rm $TMP

# ----------------------------- INSTALACION ----------------------------------

echo
echo "Instalando archivos de $NOMBRE"
echo "------------------------------"
echo

                [ -f "$NOVEDADES/config" ] && FEED="$(cat $NOVEDADES/config | grep "^feed ")"

# Crea el directorio local y temas
mkdir -p $CARPETA
cp -r base/* "$CARPETA"

if [ "$XDG_PUBLICSHARE_DIR" ]; then
	ls -s "$XDG_PUBLICSHARE_DIR" "$COMPARTIR"
	echo "Compartiendo la carpeta $XDG_PUBLICSHARE_DIR"
else
	# crea la carpeta compartir si esta no se puede asociar a la del sistema
	mkdir $COMPARTIR &> /dev/null
fi

# si no existe la configuración
if [ ! -f "~/.nb.conf" ]; then
	# agrega el idioma
	echo "NB_LANG="$(echo $LANG | cut -d'_' -f1)"" > ~/.nb.conf
fi

echo "$FEED" >> "$NOVEDADES/config"

# direccion de tu ciboulette
echo "http://$(cat /tmp/hostname)" > ${CARPETA}hostname

mkdir ~/.config/autostart/ &> /dev/null
cp $NOMBRE.desktop  ~/.config/autostart/

[ -d "${CARPETA}data" ] && sh chronicle2nanoblogger

# instala el blog en el directorio
# nb -b "$BLOG" --template-dir "$BLOG/templates" add weblog

mkdir ~/Ciboulette
cd ~/Ciboulette

ln -s "$BLOG/data" Blog/
ln -s "$COMPARTIR" Compartir/
ln -s "$NOVEDADES" Novedades/

# inicia el servidor
$NOMBRE -s &
$NOMBRE -w
$NOMBRE -d
(crontab -l | grep -v "# Ciboulette"; echo '*/5  * * * * /usr/local/bin/ciboulette -d &>/dev/null # Ciboulette';) | crontab -
$NOMBRE -h
