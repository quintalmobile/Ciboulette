#!/bin/bash

USUARIO=$1
CLAVE=$2

                # - instala dependencias
                # - verificar version de tor
                # - cargar iptables en rc.local
                # - crea servicio oculto
                # - genera las carpetas
                # - copia las configuraciones de nanoblogger, rawdog
                # - copia ciboulette
                # - actualizar ciboulette


echo
echo "Instalando dependencias"
echo "-----------------------"
echo

# verifica el sistema operativo

[ "$(which yum)" ] && aptitude="yum -y install"
[ "$(which yaourt)" ] && aptitude="yaourt -S"
[ "$(which apt-get)" ] && aptitude="apt-get -y install"


echo

DEPENENCIAS="mini-httpd tor torsocks zenity nanoblogger rawdog libnotify-bin prosody qrencode tidy markdown zenity python2-feedparser"

mkdir /tmp/ciboulette-backup/
[ -d "/var/lib/tor/ciboulette/" ] && cp -r /var/lib/tor/ciboulette/* /tmp/ciboulette-backup/*

VERSION=$(tor --version | sed 's/(.*$//g; s/[^0-9]//g; s/^0//g; s/\(..\).*/\1/g')

if [ "$VERSION" -lt "24" ] && [ "$(which apt-get)" ]; then
	echo "------- Actualizando Tor --------"
	echo "tu version de tor es muy vieja... actualizando"
	echo
	# necesita comproba si existe
	[ ! "$(grep 'deb.torproject.org' /etc/apt/sources.list)" ] && \
		echo "deb http://deb.torproject.org/torproject.org $(grep DISTRIB_CODENAME  /etc/lsb-release | cut -d= -f2) main" >> /etc/apt/sources.list
	gpg --keyserver keys.gnupg.net --recv 886DDD89
	gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | apt-key add -
	apt-get update &> /dev/null
	apt-get install -y deb.torproject.org-keyring
fi

echo "$DEPENENCIAS" | sed 's/\ /\n/g' | while read i; do
	[ ! "$(which $i)" ] && $aptitude $i
done
[ ! "$(which mini-httpd)" ] && $aptitude darkhttpd

VERSION=$(tor --version | sed 's/(.*$//g; s/[^0-9]//g; s/^0//g; s/\(..\).*/\1/g')

if [ ! "$VERSION" -lt "24" ]; then

	# agrega el soporte para DNS de Tor

	cp /etc/resolv.conf /etc/resolv.conf.backup
	RESOLV=$(cat /etc/resolv.conf)
	echo "nameserver 127.0.0.1\n$RESOLV" > /etc/resolv.conf

	# configuracion de tor sin ciboulette
	cat /etc/tor/torrc  | grep -v "\(^DNSPort\|^VirtualAddrNetworkIP\|^AutomapHostsOnResolve\|^TransPort\|#ciboulette\)" > /tmp/torrc

	# nueva configuracion
	echo "VirtualAddrNetwork 10.192.0.0/10 #ciboulette" >> /tmp/torrc
        echo "AutomapHostsOnResolve 1 #ciboulette" >> /tmp/torrc
        echo "TransPort 9040 #ciboulette" >> /tmp/torrc
        echo "DNSPort 53 #ciboulette" >> /tmp/torrc

	# hace un backup antes de instalar ciboulette
	[ "$(grep -v '#ciboulette')" ] && cp /etc/tor/torrc /etc/tor/torrc.backup
	cp /tmp/torrc /etc/tor/torrc

	# Agregar la linea solo si no existe
	./ciboulette iptables
fi
# quita las viejas versiones
cat /etc/tor/torrc | grep -v '#ciboulette' > /tmp/torrc
cp /tmp/torrc /etc/tor/torrc

# incio del servicio oculto
echo "HiddenServiceDir /var/lib/tor/ciboulette/ #ciboulette" >> /etc/tor/torrc
echo 'HiddenServicePort 80 127.0.0.1:4232   #ciboulette' >> /etc/tor/torrc
echo 'HiddenServicePort 5222 127.0.0.1:5222 #ciboulette' >> /etc/tor/torrc
echo 'HiddenServicePort 5269 127.0.0.1:5269 #ciboulette' >> /etc/tor/torrc

# recupera el backup del tu ciboulette
[ -d "/tmp/ciboulette-backup" ] && mv /tmp/ciboulette-backup/* /var/lib/tor/ciboulette/*

# reincia tor

systemctl restart tor 2> /dev/null
/etc/init.d/tor restart 2> /dev/null

sleep 10

# redirecciona los DNS a Tor

if [ ! "$(cat /etc/rc.local | grep 'ciboulette')" ]; then

echo "$(cat /etc/rc.local | grep -v "^exit")
/usr/local/bin/ciboulette iptables
exit 0" > /etc/rc.local

fi

# ------------------- prosody ---------------------------

cat "/var/lib/tor/ciboulette/hostname" > /tmp/hostname
HOST=$(cat /tmp/hostname)


# instala ciboulette

cp ciboulette /usr/local/bin/ 2> /dev/null


echo '------- Inicio -----'

cp ciboulette.png /usr/share/pixmaps/ 2> /dev/null
cp -r lang /usr/share/nanoblogger/ 2> /dev/null
cp ciboulette.desktop /usr/share/applications/ 2> /dev/null

# parche para versiones de nanoblogger 3.4.2
cp plugins/markdown.sh /usr/share/nanoblogger/plugins/page/format/markdown.sh

echo "Host \"$HOST\"
VirtualHost \"$HOST\"" > /etc/prosody/conf.avail/$HOST.cfg.lua
cp /etc/prosody/conf.avail/$HOST.cfg.lua /etc/prosody/conf.d/$HOST.cfg.lua 2> /dev/null

/etc/init.d/prosody restart 2> /dev/null
systemctl restart prosody 2> /dev/null

XMPP="${USUARIO}@${HOST}"
echo "$CLAVE
$CLAVE
" | prosodyctl adduser $XMPP $CLAVE 2> /dev/null

echo
echo "tu cuenta de XMPP ya fue creada $XMPP"
